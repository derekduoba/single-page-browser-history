{
  "name": "memstore",
  "description": "In-memory key/value data storage with simple map",
  "version": "0.1.1",
  "keywords": [
    "key",
    "value",
    "memory"
  ],
  "author": {
    "name": "Jerry Sievert",
    "email": "code@legitimatesounding.com"
  },
  "contributors": [
    {
      "name": "Jerry Sievert",
      "url": "http://legitimatesounding.com"
    }
  ],
  "licenses": [
    "MIT"
  ],
  "repositories": {
    "type": "git",
    "url": "http://github.com/JerrySievert/memstore.git"
  },
  "bugs": {
    "url": "http://github.com/JerrySievert/memstore/issues"
  },
  "directories": {
    "lib": "./lib",
    "test": "./test"
  },
  "os": [
    "linux",
    "darwin"
  ],
  "dependencies": {
    "vows": ">0.4.0"
  },
  "engines": {
    "node": ">0.1.90"
  },
  "main": "./lib/memstore",
  "readme": "# A Naive in Memory Key/Value Storage\n\n## In a nutshell\n\n- Key/Value storage\n- Useable in Node.js\n- Useable in the browser\n- Includes map() method\n\n## Synopsis\n\nWhen using from Node:\n\n    var memstore = require('memstore').Store;\n    \n    var store = new memstore();\n    store.set('abc', 123);\n    \n    store.get('abc'); // 123\n\n    var keys = store.keys(); // [ 'abc' ]\n    \n    store.delete('abc');\n    \n    store.get('abc'); // undefined\n    \n    store.flush();\n    \n    store.map(function (value, key, obj) { } /* , thisp */);\n",
  "readmeFilename": "README.md",
  "_id": "memstore@0.1.1",
  "dist": {
    "shasum": "07feea49f687b7a3ad5c6d013221d91192d33758"
  },
  "_from": "memstore@",
  "_resolved": "https://registry.npmjs.org/memstore/-/memstore-0.1.1.tgz"
}
